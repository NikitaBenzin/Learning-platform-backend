generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  email    String  @unique
  name     String?
  password String
  image    String? @default("https://i.ibb.co/PmkMhMV/blank-profile-picture.png")
  role     Role    @default(USER)

  subscription UserSubscription?

  @@map("user")
}

enum Role {
  USER
  ADMIN
}

model UserSubscription {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  subscriptionPlanId String
  startDate          DateTime @default(now())
  endDate            DateTime
  isActive           Boolean  @default(true)

  subscriptionPlan SubscriptionPlan @relation(fields: [subscriptionPlanId], references: [id], onDelete: Cascade)

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @unique

  @@unique([userId, subscriptionPlanId, startDate])
  @@map("user_subscription")
}

model SubscriptionPlan {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name               String             @unique
  price              Float
  duration           Int // Duration in days (for example, 30 for monthly, 365 for yearly)
  description        String[]
  usersSubscriptions UserSubscription[]

  @@map("subscription_plan")
}

model Intensive {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name         String  @unique
  description  String
  video        Video[]
  previewImage String  @map("preview_image")

  @@map("intensive")
}

model Video {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name        String
  description String?
  videoUrl    String    @map("video_url")
  intensive   Intensive @relation(fields: [intensiveId], references: [id], onDelete: Cascade)
  intensiveId String

  @@map("video")
}

model File {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  name    String
  fileUrl String @map("file_url")

  @@map("files")
}
